#!/bin/bash

##
# usage: bin/compile <build-dir> <cache-dir>

set -e
bpdir=$(cd $(dirname $(dirname $0)); pwd)
mkdir -p "$1" "$2"
build=$(cd "$1/" && pwd)
test -z ${build} && exit
cache=$(cd "$2/" && pwd)
test -z ${cache} && exit
DEFAULT_OTP_VERSION="master"
if [ -f ${build}/.preferred_otp_version ]; then
    OTP_VERSION=$(cat ${build}/.preferred_otp_version)
fi
ver=${OTP_VERSION:=${DEFAULT_OTP_VERSION}}
tarball=${ver}.tgz
OTP_TARBALL_URL="https://s3.amazonaws.com/heroku-buildpack-erlang/${tarball}"
ERLROOT=${build}/otp
PROFILE=${HOME}/.profile.d

echo "-----> Using Erlang/OTP $ver"

(
    set -e

    # Already cached?
    test -f ${cache}/${tarball} && exit

    rm -rf ${cache}/* # be sure not to build up cruft
    cd ${cache}
    echo "-------> Fetching Erlang/OTP $ver"
    curl -sO ${OTP_TARBALL_URL} || exit 1
)

echo "-------> Unpacking Erlang/OTP $ver"
mkdir -p ${ERLROOT}
tar zxf ${cache}/${tarball} -C ${ERLROOT} --strip-components=2
echo "-------> Installing Erlang/OTP $ver"
ln -s ${ERLROOT} /app/otp
${ERLROOT}/Install -minimal /app/otp

PATH=/app/otp/bin:$PATH
export PATH

cd $build

if [ ! -f "erlang.mk" ]; then
  echo "-----> Installing erlang.mk from https://github.com/extend/erlang.mk"
  curl -o erlang.mk https://raw.githubusercontent.com/extend/erlang.mk/master/erlang.mk
fi

if [ ! -d ${cache}/bin/ ] ; then
  mkdir ${cache}/bin
fi

if [ ! -e ${cache}/bin/wget ] ; then
  echo "-----> wget not available, building to cache"
  curl http://ftp.gnu.org/gnu/wget/wget-1.15.tar.gz | tar -xzf - -C /tmp/
  WORK_DIR=$(pwd)
  cd /tmp/wget-1.15/
  ./configure --with-open-ssl --with-ssl=openssl | sed -u 's/^/       /'
  make | sed -u 's/^/       /'
  mv ./src/wget ${cache}/bin/wget
  cd $WORK_DIR
fi

echo "-----> Building with erlang.mk"
unset GIT_DIR
PATH=$PATH:${cache}/bin/ make 2>&1 | sed -u 's/^/       /'
if [ ${PIPESTATUS[0]} -ne 0 ]; then
  echo "-----> Build failed"
  ls -l /app/otp/lib/
  exit 1
fi

if [ ! -f ./Procfile ]; then
  APP=$(ls ./_rel/)
  echo "-----> No Procfile, using web: ./_rel/$APP/bin/$APP"
  echo "web: ./_rel/$APP/bin/$APP" > Procfile
fi

echo "-----> Build succeeded"
