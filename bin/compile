#!/bin/bash

##
# usage: bin/compile <build-dir> <cache-dir>

set -e
bpdir=$(cd $(dirname $(dirname $0)); pwd)
mkdir -p "$1" "$2"
build=$(cd "$1/" && pwd)
test -z ${build} && exit
cache=$(cd "$2/" && pwd)
test -z ${cache} && exit
DEFAULT_OTP_VERSION="17.1"
if [ -f ${build}/.preferred_otp_version ]; then
    OTP_VERSION=$(cat ${build}/.preferred_otp_version)
fi
ver=${OTP_VERSION:=${DEFAULT_OTP_VERSION}}

ERLROOT=${build}/otp
PROFILE=${HOME}/.profile.d

if [ ! -d ${cache}/bin/ ] ; then
  mkdir ${cache}/bin
fi

PATH=$ERLROOT/bin:${cache}/bin:$PATH
export PATH

echo "-----> Using Erlang/OTP $ver"
if [ ! -d ${cache}/otp_${OTP_VERSION} ] ; then
  echo "-----> Building Erlang/OTP $ver"
  rm -fr ${cache}/otp_* 2>/dev/null
  curl -o ${cache}/bin/kerl https://raw.githubusercontent.com/spawngrid/kerl/master/kerl
  chmod +x ${cache}/bin/kerl
  MAKEFLAGS=-j2 kerl build ${OTP_VERSION} ${OTP_VERSION}
  kerl install ${OTP_VERSION} ${ERLROOT}
  # work around https://github.com/erlware/relx/issues/211
  rm ${ERLROOT}/releases/*/start_all_example.rel
  cp -a ${ERLROOT} ${cache}/otp_${OTP_VERSION}
else
  ls ${cache}/otp_${OTP_VERSION}
  ls ${ERLROOT}
  cp -a ${cache}/otp_${OTP_VERSION} ${ERLROOT}
fi

cd $build

if [ ! -f "erlang.mk" ]; then
  echo "-----> Installing erlang.mk from https://github.com/extend/erlang.mk"
  curl -o erlang.mk https://raw.githubusercontent.com/extend/erlang.mk/master/erlang.mk
fi

if [ ! -e ${cache}/bin/wget ] ; then
  echo "-----> wget not available, building to cache"
  curl http://ftp.gnu.org/gnu/wget/wget-1.15.tar.gz | tar -xzf - -C /tmp/wget/ --strip-components=1
  WORK_DIR=$(pwd)
  cd /tmp/wget/
  ./configure --with-ssl=openssl | sed -u 's/^/       /'
  make | sed -u 's/^/       /'
  mv ./src/wget ${cache}/bin/wget
  cd $WORK_DIR
fi

echo "-----> Building with erlang.mk"
export OTPROOT=${ERLROOT}
unset GIT_DIR
PATH=$PATH:${cache}/bin/ make 2>&1 | sed -u 's/^/       /'
echo
if [ ${PIPESTATUS[0]} -ne 0 ]; then
  echo "-----> Build failed"
  ls -l $ERLROOT
  exit 1
fi

if [ ! -f ./Procfile ]; then
  APP=$(ls ./_rel/)
  echo "-----> No Procfile, using web: ./_rel/$APP/bin/$APP"
  echo "web: ./_rel/$APP/bin/$APP foreground" > Procfile
fi

echo "-----> Build succeeded"
